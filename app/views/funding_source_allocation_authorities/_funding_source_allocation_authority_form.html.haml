- allocation = model.funding_source_allocation
%fieldset.inputs
  %ol
  - if model.new_record?
    - all_funding_sources = FundingSource.load_all.sort_by {|fs| fs.name ? fs.name.downcase : ''}
    = form.input :funding_source_id, :label => "Funding Source:", :as => :select, :collection => all_funding_sources
    = render :partial => "funding_source_allocation_authorities/programs", :locals => { :form => form, :model => model }
  - else
    Funding Source:
    = allocation.funding_source.name if allocation && allocation.funding_source
    <p>
  
  - group = MultiElementGroup.find_for_model_or_super FundingSourceAllocationAuthority, 'authority'
  - authority_options = group ? group.elements_to_dropdown : []
  = form.input :authority_id, :label => "Authority:", :as => :select, :collection => authority_options
  = form.input :amount, :label => "Amount Allocated:"
  - if model.new_record?
    - current_year = Time.now.year
    - year_range = ((current_year-25)..(current_year + 2))
    - form.object.spending_year = current_year unless form.object.spending_year
    = form.input :spending_year, :label => "Spending Year", :as => :select, :collection => year_range.to_a.reverse
  - else
    Spending Year:
    = allocation.spending_year if allocation
    <p>
  - form.object.retired = allocation.retired if allocation
  = form.input :retired, :as => :boolean, :label => "Retired:"
  %div.funding-source-amount-available
    - if model.funding_source
      = "#{number_to_currency(model.funding_source.amount_available || 0)} available"
  
  = form.commit_button