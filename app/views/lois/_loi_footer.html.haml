%ul.workflow
  -if @model.user && @model.organization && !@model.request
    %li= link_to 'Promote To Request', current_put_path(@model.id, :promote_to_request => true), :class => 'as-put', :link_class => 'btn'
%ul.buttons
  - if @model
    - if !current_user.respond_to?(:has_update_for_model) || current_user.has_update_for_model?(@model)
      %li= link_to 'Edit', current_edit_path(@model.id), :class => 'to-self', :link_class => 'btn'
    - if (!current_user.respond_to?(:has_delete_for_model) || current_user.has_delete_for_model?(@model)) && (!@model.respond_to?(:can_delete?) || @model.can_delete?)
      %li= link_to 'Delete', current_delete_path(@model.id), :class => 'as-delete', 'data-on-success' => 'refreshCaller', :link_class => 'btn'
    - if @model.respond_to?(:is_favorite_for?)
      - favorite = @model.is_favorite_for? current_user
      - if favorite
        %li= link_to 'Remove Favorite', favorite, {:class => 'as-delete no-confirm', 'data-on-success' => 'refreshCaller'}
      - else
        %li= link_to 'Add As Favorite', favorites_path(:favorite => {:user_id => current_user.id, :favorable_id => @model.id, :favorable_type => @model.class}), {:class => 'as-post', 'data-on-success' => 'refreshCaller'}
    %li= link_to 'Printable', '#', :target => "_blank", :class => 'btn area-url' if Fluxx.config(:show_printable_button) == "1"
    %li= link_to('PDF', '#', :target => "_blank", :class => 'btn area-url pdf') if Fluxx.config(:show_pdf_button) == "1"
    - if @extra_buttons
      - @extra_buttons.each do |button|
        %li= link_to button[:name], button[:path], :class => "btn #{button[:class]}"